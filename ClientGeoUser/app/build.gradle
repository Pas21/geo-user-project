apply plugin: 'com.android.application'

android {
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.vfggmail.progettoswe17.clientgeouser"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.google.code.gson:gson:2.8+'
    implementation 'org.restlet.jee:org.restlet:2.3+'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.google.android.gms:play-services-maps:10.2.0'
    //Import findbugs library
    //implementation 'com.google.code.findbugs:annotations:3.0.1'


}

//Apply findbugs inspection plugin
apply plugin: 'findbugs'

task customFindbugs(type: FindBugs) {
    effort = "max"
    reportLevel = "low"
    ignoreFailures = true
    effort = "default"
    reportLevel = "medium"
    classes = files("$project.buildDir/intermediates/classes/debug/com/vfggmail/progettoswe17/clientgeouser")
    includeFilter = file("$rootProject.rootDir/config/findbugs/includeFilter.xml")

    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = false
        xml.withMessages = true
        html.enabled = !xml.isEnabled()
        xml.setDestination("$project.buildDir/outputs/findbugs/findbugs-output.xml")
        html.setDestination("$project.buildDir/outputs/findbugs/findbugs-output.html")
        //Directory report --> ...\ClientGeoUser\app\build\outputs\findbugs\findbugs-output.html
    }
}
// UPDATE: renamed the task to customFindbugs and made it automatically be called when build is called
//check.dependsOn customFindbugs
build.finalizedBy(customFindbugs)
